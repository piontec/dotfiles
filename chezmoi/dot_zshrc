# Path to your oh-my-zsh installation.
export ZSH=/home/piontec/.oh-my-zsh

export WORKON_HOME=$HOME/.virtualenvs

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
#ZSH_THEME="muse"
ZSH_THEME="risto"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
HIST_STAMPS="yyyy-mm-dd"

HISTSIZE=10000000
SAVEHIST=10000000
HISTORY_IGNORE="(ls|pwd|exit)*"
setopt EXTENDED_HISTORY      # Write the history file in the ':start:elapsed;command' format.
setopt INC_APPEND_HISTORY    # Write to the history file immediately, not when the shell exits.
setopt SHARE_HISTORY         # Share history between all sessions.
setopt HIST_IGNORE_DUPS      # Do not record an event that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS  # Delete an old recorded event if a new event is a duplicate.
setopt HIST_IGNORE_SPACE     # Do not record an event starting with a space.
setopt HIST_SAVE_NO_DUPS     # Do not write a duplicate event to the history file.
setopt HIST_VERIFY           # Do not execute immediately upon history expansion.
setopt APPEND_HISTORY        # append to history file (Default)
setopt HIST_NO_STORE         # Don't store history commands
setopt HIST_REDUCE_BLANKS    # Remove superfluous blanks from each command line being added to the history.

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  autojump
  aws 
  common-aliases
  copyfile
  dircycle
  docker
  fzf-tab
  fzf
  git
  httpie
  kube-ps1
  kubectl 
  pip
  poetry
  sudo 
  systemd
  terraform
  tmux
  zsh-autosuggestions
)

source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# User configuration
export GOPATH=~/devel/go

export PATH="$HOME/bin:$HOME/.local/bin:/usr/local/bin:/usr/local/sbin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/opt/bin/:$GOROOT/bin:$GOPATH/bin:/snap/bin:$HOME/tools/pyenv/libexec:/usr/local/go/bin/"
# export MANPATH="/usr/local/man:$MANPATH"
export TF_PLUGIN_CACHE_DIR=$HOME/tools/terraform-plugin-dir

# linuxbrew
eval "$(/home/piontec/.linuxbrew/bin/brew shellenv)"
FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"

source $ZSH/oh-my-zsh.sh

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='nvim'
else
  export EDITOR='nvim'
fi

PROMPT=$PROMPT'$(kube_ps1) '
KUBE_PS1_NS_ENABLE=false
KUBE_PS1_SYMBOL_USE_IMG=true
KUBE_PS1_DIVIDER=''

# pyenv setup
export PYENV_ROOT=$HOME/tools/pyenv
export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init --path)"
eval "$(pyenv init -)"

# rust
export PATH="$HOME/.cargo/bin:$PATH"

#poetry
# Compilation flags
# export ARCHFLAGS="-arch x86_64"

#krew
export PATH="$PATH:${HOME}/.krew/bin"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
alias watch="watch "
alias slackutil="docker run --rm -ti -e SLACK_TOKEN=${SLACK_TOKEN} quay.io/giantswarm/slackutil"
alias cat="batcat -p"
alias tf=tofu
source <(kubectl completion zsh)
alias k=kubecolor
alias kctx="kubectx"
alias ks="kubecolor -n kube-system"
alias kg="kubecolor -n giantswarm"
alias km="kubecolor -n monitoring"
alias kf="kubecolor -n flux-system"
alias kfg="kubecolor -n flux-giantswarm"
alias kn="kubecolor neat"
# make completion work with kubecolor
compdef kubecolor=kubectl
alias vim=nvim
alias open=xdg-open
alias opsctl='OPSCTL_OPSGENIE_TOKEN=`op item get OPSCTL_OPSGENIE_TOKEN --vault Employee --fields notesPlain` OPSCTL_GITHUB_TOKEN=`op item get github_private_token --vault Employee --fields password --reveal` PATH=/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:$HOME/bin $HOME/bin/opsctl'
alias gg="git graph"
alias gcrb="git branch -r | awk \"{print \\\$1}\" | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk \"{print \\\$1}\" | xargs git branch -D"
unalias cp
unalias rm

# exa
alias ls='exa --hyperlink'                                                          # ls
alias l='exa -lbF --hyperlink'                                                # list, size, type, git
alias ll='exa -lbF --hyperlink'                                             # long list
alias llm='exa -lbd  --sort=modified --hyperlink'                            # long list, modified date sort
alias la='exa -lbhHigUmuSa --time-style=long-iso --color-scale --hyperlink'  # all list
alias lx='exa -lbhHigUmuSa@ --time-style=long-iso --color-scale --hyperlink' # all + extended list
alias lS='exa -1'                                                              # one column, just names
alias lt='exa --tree --level=2'                                         # tree

# fzf
source /usr/share/doc/fzf/examples/key-bindings.zsh
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export CHEAT_USE_FZF=true
export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#666666,underline"

eval "$(starship init zsh)"

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# for cmd in $(cat ~/tools/python-based-tools/bin-list); do
#   $cmd() {~/bin/pipenv-python-tools $0 "$@"}
# done

# [ -f ~/.inshellisense/key-bindings.zsh ] && source ~/.inshellisense/key-bindings.zsh

# . "$HOME/.atuin/bin/env"

# eval "$(atuin init zsh --disable-up-arrow)"
#
. $(pack completion --shell zsh)
source ~/.openai_api_key
source ~/.zsh-copilot/zsh-copilot.plugin.zsh

function precmd {
  hpwd=$history[$((HISTCMD-1))]
  if [[ $hpwd == " "* ]]; then
    return
  fi
  if [[ $hpwd == "cd" ]]; then  
    cwd=$OLDPWD
  else
    cwd=$PWD
  fi
  hpwd="${hpwd% ### *} ### $cwd"
  echo "$hpwd" >>~/.zsh-history-logs/zsh-history-$(date "+%Y-%m-%d").log
}
export SUPPRESS_LABEL_WARNING=True

# bun completions
[ -s "/home/piontec/.oh-my-zsh/completions/_bun" ] && source "/home/piontec/.oh-my-zsh/completions/_bun"

# bun
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"

# k8s
export KUBECONFIG=/tmp/.kube.config

# umbrella
export UMBRELLA_TARGET_DIR=~/work/giantswarm/git/drizzle

PATH="/home/piontec/perl5/bin${PATH:+:${PATH}}"; export PATH;
PERL5LIB="/home/piontec/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"; export PERL5LIB;
PERL_LOCAL_LIB_ROOT="/home/piontec/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"; export PERL_LOCAL_LIB_ROOT;
PERL_MB_OPT="--install_base \"/home/piontec/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=/home/piontec/perl5"; export PERL_MM_OPT;

function y() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(command cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		builtin cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}
alias icat="kitten icat"
alias s="kitten ssh"
alias rg="rg --hyperlink-format=kitty"

# ai tools - claude & gemini
export PATH="$HOME/.npm-global/bin:$PATH"
